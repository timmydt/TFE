generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                   Int           @id @default(autoincrement())
  username             String        @unique
  password             String
  mail                 String        @unique
  first_name           String?
  last_name            String?
  admin                Boolean       @default(false)
  recoverPasswordDate  DateTime?     @db.Date
  recoverPasswordToken String? @unique
  caves                Cave[]
  notes                Note[]
  wines                PrivateWine[]
  importedCave         Cave[]        @relation("AuthorizedCaves")
}

model Cave {
  id         Int           @id @default(autoincrement())
  name       String
  creatorId  Int
  creator    User          @relation(fields: [creatorId], references: [id])
  exportedTo User[]        @relation("AuthorizedCaves")
  bottles    PrivateWine[]

  @@index([creatorId], name: "creatorId")
}

model PrivateWine {
  id          Int       @id @default(autoincrement())
  name        String
  best_before DateTime? @db.Date
  food        String?
  grapes      String?
  maker       String?
  picture     String?
  year        Int?
  creatorId   Int
  creator     User      @relation(fields: [creatorId], references: [id])
  caves       Cave[]
  quantity Int @default(1)
  rating Int @default(0)

  @@index([creatorId], name: "creatorId")
}

model PublicWine {
  id      Int     @id @default(autoincrement())
  name    String
  food    String?
  grapes  String?
  maker   String?
  picture String?
  year    Int?
}

model Note {
  id        Int       @id @default(autoincrement())
  note      String? @db.LongText
  picture   String?
  date      DateTime?
  creatorId Int
  name      String?
  creator   User      @relation(fields: [creatorId], references: [id])
  rating Int @default(0)

  @@index([creatorId], name: "creatorId")
}